const express = require('express');
const usersRepo = require('../../repositories/users');
const signupTemplate = require('../../views/admin/auth/signup');
const signinTemplate = require('../../views/admin/auth/signin');
//create sub router
// router = app 
const router = express.Router();

router.get('/signup', (req, res) => {
 
    // res.send(`
    //   <div>
    //   ${req.session.userId}
    //     <form method="POST">
    //       <input name="email" placeholder="email" />
    //       <input name="password" placeholder="password" />
    //       <input name="passwordConfirmation" placeholder="password confirmation" />
    //       <button>Sign Up</button>
    //     </form>
    //   </div>
    // `);
    res.send(signupTemplate({req}));
  });

router.post('/signup', async (req, res) => {
    //console.log(req.body);
    const {email,password,passwordConfirmation} = req.body;
    console.log(passwordConfirmation);
    const existingUser = await usersRepo.getOneBy({email});
  
    if(existingUser){
      return res.send('Email in use.');
    }
  
    if(password !== passwordConfirmation){
      return res.send('Password must match.');
    }
  
    //Create a user
    const user = await usersRepo.create({email,password});
    //Store the id that user inside the users cookie
    req.session.userId = user.id; //Added by cookie session
    res.send('Account created!!!');
  });
  
  router.get('/signout',(req,res)=>{
    req.session = null;
    res.send('You are logged out.');
  });
  
  
router.get('/signin',(req,res)=>{
    res.send(signinTemplate());
  });
  
router.post('/signin',async (req,res)=>{
    const {email,password} = req.body;
    const user = await usersRepo.getOneBy({email});
  
    if(!user){
      return res.send('Email not found');
    }
  
  
    const validPassword = await usersRepo.comparePasswords(user.password,password);
    if(!validPassword){
      return res.send('Invalid password.');
    }
    //return session
    req.session.userId = user.id;
  
    res.send('You are signed in');
});

module.exports = router;
  